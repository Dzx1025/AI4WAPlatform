services:
  # PostgreSQL with PostGIS extension
  postgis:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
    volumes:
      - postgis-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j graph database
  neo4j:
    image: neo4j:5.9.0
    environment:
      NEO4J_AUTH: neo4j/neo4jpassword
      NEO4J_PLUGINS: '["apoc"]'
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j-data:/data
      - neo4j-logs:/logs
      - neo4j-plugins:/plugins

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    ports:
      - "6333:6333"  # gRPC
      - "6334:6334"  # HTTP
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6333
      QDRANT__SERVICE__HTTP_PORT: 6334

  # Hasura GraphQL engine
  hasura:
    image: hasura/graphql-engine:v2.43.0.cli-migrations-v3
    ports:
      - "8080:8080"
    depends_on:
      postgis:
        condition: service_healthy
    volumes:
      - ./hasura/:/hasura/
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgis:5432/mydb
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: hasuraadminsecret
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous

  # Django application
  django:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      POSTGRES_HOST: postgis
      POSTGRES_PORT: 5432
      NEO4J_URL: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: neo4jpassword
      QDRANT_URL: http://qdrant:6334
      DEBUG: "true"
    command: python manage.py runserver 0.0.0.0:8000

volumes:
  postgis-data:
  neo4j-data:
  neo4j-logs:
  neo4j-plugins:
  qdrant-data: